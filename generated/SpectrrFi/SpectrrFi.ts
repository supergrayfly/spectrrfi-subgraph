// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BuyOfferAccepted extends ethereum.Event {
  get params(): BuyOfferAccepted__Params {
    return new BuyOfferAccepted__Params(this);
  }
}

export class BuyOfferAccepted__Params {
  _event: BuyOfferAccepted;

  constructor(event: BuyOfferAccepted) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BuyOfferBuyerAddressChanged extends ethereum.Event {
  get params(): BuyOfferBuyerAddressChanged__Params {
    return new BuyOfferBuyerAddressChanged__Params(this);
  }
}

export class BuyOfferBuyerAddressChanged__Params {
  _event: BuyOfferBuyerAddressChanged;

  constructor(event: BuyOfferBuyerAddressChanged) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BuyOfferCanceled extends ethereum.Event {
  get params(): BuyOfferCanceled__Params {
    return new BuyOfferCanceled__Params(this);
  }
}

export class BuyOfferCanceled__Params {
  _event: BuyOfferCanceled;

  constructor(event: BuyOfferCanceled) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BuyOfferCollateralAdded extends ethereum.Event {
  get params(): BuyOfferCollateralAdded__Params {
    return new BuyOfferCollateralAdded__Params(this);
  }
}

export class BuyOfferCollateralAdded__Params {
  _event: BuyOfferCollateralAdded;

  constructor(event: BuyOfferCollateralAdded) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountId(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BuyOfferCreated extends ethereum.Event {
  get params(): BuyOfferCreated__Params {
    return new BuyOfferCreated__Params(this);
  }
}

export class BuyOfferCreated__Params {
  _event: BuyOfferCreated;

  constructor(event: BuyOfferCreated) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buying(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyingId(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get buyingFor(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get buyingForId(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get exRate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get collateralId(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get repayInSeconds(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class BuyOfferForfeited extends ethereum.Event {
  get params(): BuyOfferForfeited__Params {
    return new BuyOfferForfeited__Params(this);
  }
}

export class BuyOfferForfeited__Params {
  _event: BuyOfferForfeited;

  constructor(event: BuyOfferForfeited) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BuyOfferLiquidated extends ethereum.Event {
  get params(): BuyOfferLiquidated__Params {
    return new BuyOfferLiquidated__Params(this);
  }
}

export class BuyOfferLiquidated__Params {
  _event: BuyOfferLiquidated;

  constructor(event: BuyOfferLiquidated) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get liquidator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BuyOfferRepaid extends ethereum.Event {
  get params(): BuyOfferRepaid__Params {
    return new BuyOfferRepaid__Params(this);
  }
}

export class BuyOfferRepaid__Params {
  _event: BuyOfferRepaid;

  constructor(event: BuyOfferRepaid) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountId(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get byPart(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class BuyOfferSellerAddressChanged extends ethereum.Event {
  get params(): BuyOfferSellerAddressChanged__Params {
    return new BuyOfferSellerAddressChanged__Params(this);
  }
}

export class BuyOfferSellerAddressChanged__Params {
  _event: BuyOfferSellerAddressChanged;

  constructor(event: BuyOfferSellerAddressChanged) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeeAddressChanged extends ethereum.Event {
  get params(): FeeAddressChanged__Params {
    return new FeeAddressChanged__Params(this);
  }
}

export class FeeAddressChanged__Params {
  _event: FeeAddressChanged;

  constructor(event: FeeAddressChanged) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewTokenAdded extends ethereum.Event {
  get params(): NewTokenAdded__Params {
    return new NewTokenAdded__Params(this);
  }
}

export class NewTokenAdded__Params {
  _event: NewTokenAdded;

  constructor(event: NewTokenAdded) {
    this._event = event;
  }

  get tokenId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get tokenName(): string {
    return this._event.parameters[1].value.toString();
  }

  get tokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get chainlinkOracleAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SaleOfferAccepted extends ethereum.Event {
  get params(): SaleOfferAccepted__Params {
    return new SaleOfferAccepted__Params(this);
  }
}

export class SaleOfferAccepted__Params {
  _event: SaleOfferAccepted;

  constructor(event: SaleOfferAccepted) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collateral(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralId(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get buyer(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SaleOfferBuyerAddressChanged extends ethereum.Event {
  get params(): SaleOfferBuyerAddressChanged__Params {
    return new SaleOfferBuyerAddressChanged__Params(this);
  }
}

export class SaleOfferBuyerAddressChanged__Params {
  _event: SaleOfferBuyerAddressChanged;

  constructor(event: SaleOfferBuyerAddressChanged) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SaleOfferCanceled extends ethereum.Event {
  get params(): SaleOfferCanceled__Params {
    return new SaleOfferCanceled__Params(this);
  }
}

export class SaleOfferCanceled__Params {
  _event: SaleOfferCanceled;

  constructor(event: SaleOfferCanceled) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SaleOfferCollateralAdded extends ethereum.Event {
  get params(): SaleOfferCollateralAdded__Params {
    return new SaleOfferCollateralAdded__Params(this);
  }
}

export class SaleOfferCollateralAdded__Params {
  _event: SaleOfferCollateralAdded;

  constructor(event: SaleOfferCollateralAdded) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SaleOfferCreated extends ethereum.Event {
  get params(): SaleOfferCreated__Params {
    return new SaleOfferCreated__Params(this);
  }
}

export class SaleOfferCreated__Params {
  _event: SaleOfferCreated;

  constructor(event: SaleOfferCreated) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get selling(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sellingId(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get sellingFor(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get sellingForId(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get exRate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get repayInSeconds(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class SaleOfferForfeited extends ethereum.Event {
  get params(): SaleOfferForfeited__Params {
    return new SaleOfferForfeited__Params(this);
  }
}

export class SaleOfferForfeited__Params {
  _event: SaleOfferForfeited;

  constructor(event: SaleOfferForfeited) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SaleOfferLiquidated extends ethereum.Event {
  get params(): SaleOfferLiquidated__Params {
    return new SaleOfferLiquidated__Params(this);
  }
}

export class SaleOfferLiquidated__Params {
  _event: SaleOfferLiquidated;

  constructor(event: SaleOfferLiquidated) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get liquidator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SaleOfferRepaid extends ethereum.Event {
  get params(): SaleOfferRepaid__Params {
    return new SaleOfferRepaid__Params(this);
  }
}

export class SaleOfferRepaid__Params {
  _event: SaleOfferRepaid;

  constructor(event: SaleOfferRepaid) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountId(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get byPart(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SaleOfferSellerAddressChanged extends ethereum.Event {
  get params(): SaleOfferSellerAddressChanged__Params {
    return new SaleOfferSellerAddressChanged__Params(this);
  }
}

export class SaleOfferSellerAddressChanged__Params {
  _event: SaleOfferSellerAddressChanged;

  constructor(event: SaleOfferSellerAddressChanged) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SpectrrFi__buyOffersResult {
  value0: i32;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: i32;
  value9: i32;
  value10: i32;
  value11: Address;
  value12: Address;

  constructor(
    value0: i32,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: i32,
    value9: i32,
    value10: i32,
    value11: Address,
    value12: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8))
    );
    map.set(
      "value9",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value9))
    );
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10))
    );
    map.set("value11", ethereum.Value.fromAddress(this.value11));
    map.set("value12", ethereum.Value.fromAddress(this.value12));
    return map;
  }

  getOfferStatus(): i32 {
    return this.value0;
  }

  getOfferLockState(): i32 {
    return this.value1;
  }

  getOfferId(): BigInt {
    return this.value2;
  }

  getBuying(): BigInt {
    return this.value3;
  }

  getBuyingFor(): BigInt {
    return this.value4;
  }

  getCollateral(): BigInt {
    return this.value5;
  }

  getRepayInSeconds(): BigInt {
    return this.value6;
  }

  getTimeAccepted(): BigInt {
    return this.value7;
  }

  getBuyingId(): i32 {
    return this.value8;
  }

  getBuyingForId(): i32 {
    return this.value9;
  }

  getCollateralId(): i32 {
    return this.value10;
  }

  getBuyer(): Address {
    return this.value11;
  }

  getSeller(): Address {
    return this.value12;
  }
}

export class SpectrrFi__getRatioInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: i32;
  value3: i32;
  value4: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: i32,
    value3: i32,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): i32 {
    return this.value2;
  }

  getValue3(): i32 {
    return this.value3;
  }

  getValue4(): Address {
    return this.value4;
  }
}

export class SpectrrFi__saleOffersResult {
  value0: i32;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: i32;
  value9: i32;
  value10: i32;
  value11: Address;
  value12: Address;

  constructor(
    value0: i32,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: i32,
    value9: i32,
    value10: i32,
    value11: Address,
    value12: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8))
    );
    map.set(
      "value9",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value9))
    );
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10))
    );
    map.set("value11", ethereum.Value.fromAddress(this.value11));
    map.set("value12", ethereum.Value.fromAddress(this.value12));
    return map;
  }

  getOfferStatus(): i32 {
    return this.value0;
  }

  getOfferLockState(): i32 {
    return this.value1;
  }

  getOfferId(): BigInt {
    return this.value2;
  }

  getSelling(): BigInt {
    return this.value3;
  }

  getSellingFor(): BigInt {
    return this.value4;
  }

  getCollateral(): BigInt {
    return this.value5;
  }

  getRepayInSeconds(): BigInt {
    return this.value6;
  }

  getTimeAccepted(): BigInt {
    return this.value7;
  }

  getSellingId(): i32 {
    return this.value8;
  }

  getSellingForId(): i32 {
    return this.value9;
  }

  getCollateralId(): i32 {
    return this.value10;
  }

  getSeller(): Address {
    return this.value11;
  }

  getBuyer(): Address {
    return this.value12;
  }
}

export class SpectrrFi__tokensResult {
  value0: i32;
  value1: i32;
  value2: string;
  value3: Address;
  value4: Address;
  value5: Address;

  constructor(
    value0: i32,
    value1: i32,
    value2: string,
    value3: Address,
    value4: Address,
    value5: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }

  getTokenId(): i32 {
    return this.value0;
  }

  getDecimals(): i32 {
    return this.value1;
  }

  getTokenName(): string {
    return this.value2;
  }

  getTokenAddress(): Address {
    return this.value3;
  }

  getChainlinkOracleAddress(): Address {
    return this.value4;
  }

  getItoken(): Address {
    return this.value5;
  }
}

export class SpectrrFi extends ethereum.SmartContract {
  static bind(address: Address): SpectrrFi {
    return new SpectrrFi("SpectrrFi", address);
  }

  FEE_PERCENT(): i32 {
    let result = super.call("FEE_PERCENT", "FEE_PERCENT():(uint16)", []);

    return result[0].toI32();
  }

  try_FEE_PERCENT(): ethereum.CallResult<i32> {
    let result = super.tryCall("FEE_PERCENT", "FEE_PERCENT():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MIN_RATIO_LIQUIDATION(): BigInt {
    let result = super.call(
      "MIN_RATIO_LIQUIDATION",
      "MIN_RATIO_LIQUIDATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_RATIO_LIQUIDATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_RATIO_LIQUIDATION",
      "MIN_RATIO_LIQUIDATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  RATIO_COLLATERAL_TO_DEBT(): BigInt {
    let result = super.call(
      "RATIO_COLLATERAL_TO_DEBT",
      "RATIO_COLLATERAL_TO_DEBT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_RATIO_COLLATERAL_TO_DEBT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "RATIO_COLLATERAL_TO_DEBT",
      "RATIO_COLLATERAL_TO_DEBT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  RATIO_LIQUIDATION_IS_LOSS(): BigInt {
    let result = super.call(
      "RATIO_LIQUIDATION_IS_LOSS",
      "RATIO_LIQUIDATION_IS_LOSS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_RATIO_LIQUIDATION_IS_LOSS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "RATIO_LIQUIDATION_IS_LOSS",
      "RATIO_LIQUIDATION_IS_LOSS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyOffers(param0: BigInt): SpectrrFi__buyOffersResult {
    let result = super.call(
      "buyOffers",
      "buyOffers(uint256):(uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new SpectrrFi__buyOffersResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toI32(),
      result[9].toI32(),
      result[10].toI32(),
      result[11].toAddress(),
      result[12].toAddress()
    );
  }

  try_buyOffers(
    param0: BigInt
  ): ethereum.CallResult<SpectrrFi__buyOffersResult> {
    let result = super.tryCall(
      "buyOffers",
      "buyOffers(uint256):(uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SpectrrFi__buyOffersResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toI32(),
        value[9].toI32(),
        value[10].toI32(),
        value[11].toAddress(),
        value[12].toAddress()
      )
    );
  }

  buyOffersCount(): BigInt {
    let result = super.call("buyOffersCount", "buyOffersCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_buyOffersCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "buyOffersCount",
      "buyOffersCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  canLiquidate(_offerId: BigInt, _offerType: i32): boolean {
    let result = super.call(
      "canLiquidate",
      "canLiquidate(uint256,uint8):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );

    return result[0].toBoolean();
  }

  try_canLiquidate(
    _offerId: BigInt,
    _offerType: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canLiquidate",
      "canLiquidate(uint256,uint8):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canLiquidate1(
    _amountTokenWei: BigInt,
    _amountTokenId: i32,
    _collateralTokenAmountWei: BigInt,
    _collateralTokenId: i32,
    _liquidationLimitRatio: BigInt
  ): boolean {
    let result = super.call(
      "canLiquidate",
      "canLiquidate(uint256,uint8,uint256,uint8,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountTokenWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_amountTokenId)),
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId)),
        ethereum.Value.fromUnsignedBigInt(_liquidationLimitRatio)
      ]
    );

    return result[0].toBoolean();
  }

  try_canLiquidate1(
    _amountTokenWei: BigInt,
    _amountTokenId: i32,
    _collateralTokenAmountWei: BigInt,
    _collateralTokenId: i32,
    _liquidationLimitRatio: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canLiquidate",
      "canLiquidate(uint256,uint8,uint256,uint8,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountTokenWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_amountTokenId)),
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId)),
        ethereum.Value.fromUnsignedBigInt(_liquidationLimitRatio)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canLiquidateTimeOver(
    _timeAccepted: BigInt,
    _repayInSeconds: BigInt
  ): boolean {
    let result = super.call(
      "canLiquidateTimeOver",
      "canLiquidateTimeOver(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_timeAccepted),
        ethereum.Value.fromUnsignedBigInt(_repayInSeconds)
      ]
    );

    return result[0].toBoolean();
  }

  try_canLiquidateTimeOver(
    _timeAccepted: BigInt,
    _repayInSeconds: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canLiquidateTimeOver",
      "canLiquidateTimeOver(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_timeAccepted),
        ethereum.Value.fromUnsignedBigInt(_repayInSeconds)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createBuyOffer(
    _buyingTokenAmountWei: BigInt,
    _buyingTokenId: i32,
    _exchangeRateWei: BigInt,
    _buyingForTokenId: i32,
    _collateralTokenId: i32,
    _repayInSeconds: BigInt
  ): BigInt {
    let result = super.call(
      "createBuyOffer",
      "createBuyOffer(uint256,uint8,uint256,uint8,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_buyingTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_buyingTokenId)),
        ethereum.Value.fromUnsignedBigInt(_exchangeRateWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_buyingForTokenId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId)),
        ethereum.Value.fromUnsignedBigInt(_repayInSeconds)
      ]
    );

    return result[0].toBigInt();
  }

  try_createBuyOffer(
    _buyingTokenAmountWei: BigInt,
    _buyingTokenId: i32,
    _exchangeRateWei: BigInt,
    _buyingForTokenId: i32,
    _collateralTokenId: i32,
    _repayInSeconds: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createBuyOffer",
      "createBuyOffer(uint256,uint8,uint256,uint8,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_buyingTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_buyingTokenId)),
        ethereum.Value.fromUnsignedBigInt(_exchangeRateWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_buyingForTokenId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId)),
        ethereum.Value.fromUnsignedBigInt(_repayInSeconds)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createSaleOffer(
    _sellingTokenAmountWei: BigInt,
    _sellingTokenId: i32,
    _exchangeRateWei: BigInt,
    _sellingForTokenId: i32,
    _repayInSeconds: BigInt
  ): BigInt {
    let result = super.call(
      "createSaleOffer",
      "createSaleOffer(uint256,uint8,uint256,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_sellingTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_sellingTokenId)),
        ethereum.Value.fromUnsignedBigInt(_exchangeRateWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_sellingForTokenId)),
        ethereum.Value.fromUnsignedBigInt(_repayInSeconds)
      ]
    );

    return result[0].toBigInt();
  }

  try_createSaleOffer(
    _sellingTokenAmountWei: BigInt,
    _sellingTokenId: i32,
    _exchangeRateWei: BigInt,
    _sellingForTokenId: i32,
    _repayInSeconds: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createSaleOffer",
      "createSaleOffer(uint256,uint8,uint256,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_sellingTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_sellingTokenId)),
        ethereum.Value.fromUnsignedBigInt(_exchangeRateWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_sellingForTokenId)),
        ethereum.Value.fromUnsignedBigInt(_repayInSeconds)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeAddress(): Address {
    let result = super.call("feeAddress", "feeAddress():(address)", []);

    return result[0].toAddress();
  }

  try_feeAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeAddress", "feeAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBlockTimestamp(): BigInt {
    let result = super.call(
      "getBlockTimestamp",
      "getBlockTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getBlockTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBlockTimestamp",
      "getBlockTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getChainlinkPrice(_chainlinkOracleAddress: Address): BigInt {
    let result = super.call(
      "getChainlinkPrice",
      "getChainlinkPrice(address):(int256)",
      [ethereum.Value.fromAddress(_chainlinkOracleAddress)]
    );

    return result[0].toBigInt();
  }

  try_getChainlinkPrice(
    _chainlinkOracleAddress: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getChainlinkPrice",
      "getChainlinkPrice(address):(int256)",
      [ethereum.Value.fromAddress(_chainlinkOracleAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollateral(
    _amountTokenWei: BigInt,
    _amountTokenId: i32,
    _collateralTokenId: i32,
    _collateralTokenAmountWeiToDebtRatio: BigInt
  ): BigInt {
    let result = super.call(
      "getCollateral",
      "getCollateral(uint256,uint8,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountTokenWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_amountTokenId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId)),
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWeiToDebtRatio)
      ]
    );

    return result[0].toBigInt();
  }

  try_getCollateral(
    _amountTokenWei: BigInt,
    _amountTokenId: i32,
    _collateralTokenId: i32,
    _collateralTokenAmountWeiToDebtRatio: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollateral",
      "getCollateral(uint256,uint8,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountTokenWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_amountTokenId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId)),
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWeiToDebtRatio)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getITokenFromId(_tokenId: i32): Address {
    let result = super.call(
      "getITokenFromId",
      "getITokenFromId(uint8):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_tokenId))]
    );

    return result[0].toAddress();
  }

  try_getITokenFromId(_tokenId: i32): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getITokenFromId",
      "getITokenFromId(uint8):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_tokenId))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLiquidationPriceAmountFor(
    _collateralTokenAmountWei: BigInt,
    _amountForTokenWei: BigInt,
    _collateralTokenId: i32,
    _liquidationLimit: BigInt
  ): BigInt {
    let result = super.call(
      "getLiquidationPriceAmountFor",
      "getLiquidationPriceAmountFor(uint256,uint256,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(_amountForTokenWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId)),
        ethereum.Value.fromUnsignedBigInt(_liquidationLimit)
      ]
    );

    return result[0].toBigInt();
  }

  try_getLiquidationPriceAmountFor(
    _collateralTokenAmountWei: BigInt,
    _amountForTokenWei: BigInt,
    _collateralTokenId: i32,
    _liquidationLimit: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLiquidationPriceAmountFor",
      "getLiquidationPriceAmountFor(uint256,uint256,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(_amountForTokenWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId)),
        ethereum.Value.fromUnsignedBigInt(_liquidationLimit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLiquidationPriceAmountFor1(_offerId: BigInt, _offerType: i32): BigInt {
    let result = super.call(
      "getLiquidationPriceAmountFor",
      "getLiquidationPriceAmountFor(uint256,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );

    return result[0].toBigInt();
  }

  try_getLiquidationPriceAmountFor1(
    _offerId: BigInt,
    _offerType: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLiquidationPriceAmountFor",
      "getLiquidationPriceAmountFor(uint256,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLiquidationPriceCollateral(_offerId: BigInt, _offerType: i32): BigInt {
    let result = super.call(
      "getLiquidationPriceCollateral",
      "getLiquidationPriceCollateral(uint256,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );

    return result[0].toBigInt();
  }

  try_getLiquidationPriceCollateral(
    _offerId: BigInt,
    _offerType: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLiquidationPriceCollateral",
      "getLiquidationPriceCollateral(uint256,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLiquidationPriceCollateral1(
    _collateralTokenAmountWei: BigInt,
    _amountForTokenWei: BigInt,
    _amountForTokenId: i32,
    _liquidationLimit: BigInt
  ): BigInt {
    let result = super.call(
      "getLiquidationPriceCollateral",
      "getLiquidationPriceCollateral(uint256,uint256,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(_amountForTokenWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_amountForTokenId)),
        ethereum.Value.fromUnsignedBigInt(_liquidationLimit)
      ]
    );

    return result[0].toBigInt();
  }

  try_getLiquidationPriceCollateral1(
    _collateralTokenAmountWei: BigInt,
    _amountForTokenWei: BigInt,
    _amountForTokenId: i32,
    _liquidationLimit: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLiquidationPriceCollateral",
      "getLiquidationPriceCollateral(uint256,uint256,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(_amountForTokenWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_amountForTokenId)),
        ethereum.Value.fromUnsignedBigInt(_liquidationLimit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRatio(
    _amountTokenWei: BigInt,
    _collateralTokenAmountWei: BigInt,
    _amountTokenId: i32,
    _collateralTokenId: i32
  ): BigInt {
    let result = super.call(
      "getRatio",
      "getRatio(uint256,uint256,uint8,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountTokenWei),
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_amountTokenId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId))
      ]
    );

    return result[0].toBigInt();
  }

  try_getRatio(
    _amountTokenWei: BigInt,
    _collateralTokenAmountWei: BigInt,
    _amountTokenId: i32,
    _collateralTokenId: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRatio",
      "getRatio(uint256,uint256,uint8,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountTokenWei),
        ethereum.Value.fromUnsignedBigInt(_collateralTokenAmountWei),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_amountTokenId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_collateralTokenId))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRatioInfo(
    _offerId: BigInt,
    _offerType: i32
  ): SpectrrFi__getRatioInfoResult {
    let result = super.call(
      "getRatioInfo",
      "getRatioInfo(uint256,uint8):(uint256,uint256,uint8,uint8,address)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );

    return new SpectrrFi__getRatioInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toAddress()
    );
  }

  try_getRatioInfo(
    _offerId: BigInt,
    _offerType: i32
  ): ethereum.CallResult<SpectrrFi__getRatioInfoResult> {
    let result = super.tryCall(
      "getRatioInfo",
      "getRatioInfo(uint256,uint8):(uint256,uint256,uint8,uint8,address)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SpectrrFi__getRatioInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toAddress()
      )
    );
  }

  isLiquidationLoss(_offerId: BigInt, _offerType: i32): boolean {
    let result = super.call(
      "isLiquidationLoss",
      "isLiquidationLoss(uint256,uint8):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );

    return result[0].toBoolean();
  }

  try_isLiquidationLoss(
    _offerId: BigInt,
    _offerType: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isLiquidationLoss",
      "isLiquidationLoss(uint256,uint8):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_offerId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_offerType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  saleOffers(param0: BigInt): SpectrrFi__saleOffersResult {
    let result = super.call(
      "saleOffers",
      "saleOffers(uint256):(uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new SpectrrFi__saleOffersResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toI32(),
      result[9].toI32(),
      result[10].toI32(),
      result[11].toAddress(),
      result[12].toAddress()
    );
  }

  try_saleOffers(
    param0: BigInt
  ): ethereum.CallResult<SpectrrFi__saleOffersResult> {
    let result = super.tryCall(
      "saleOffers",
      "saleOffers(uint256):(uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,uint8,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SpectrrFi__saleOffersResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toI32(),
        value[9].toI32(),
        value[10].toI32(),
        value[11].toAddress(),
        value[12].toAddress()
      )
    );
  }

  saleOffersCount(): BigInt {
    let result = super.call(
      "saleOffersCount",
      "saleOffersCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_saleOffersCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "saleOffersCount",
      "saleOffersCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenCount(): i32 {
    let result = super.call("tokenCount", "tokenCount():(uint8)", []);

    return result[0].toI32();
  }

  try_tokenCount(): ethereum.CallResult<i32> {
    let result = super.tryCall("tokenCount", "tokenCount():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  tokenIdToPrice(_tokenId: i32): BigInt {
    let result = super.call(
      "tokenIdToPrice",
      "tokenIdToPrice(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_tokenId))]
    );

    return result[0].toBigInt();
  }

  try_tokenIdToPrice(_tokenId: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenIdToPrice",
      "tokenIdToPrice(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_tokenId))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokens(param0: i32): SpectrrFi__tokensResult {
    let result = super.call(
      "tokens",
      "tokens(uint8):(uint8,uint8,string,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );

    return new SpectrrFi__tokensResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toString(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toAddress()
    );
  }

  try_tokens(param0: i32): ethereum.CallResult<SpectrrFi__tokensResult> {
    let result = super.tryCall(
      "tokens",
      "tokens(uint8):(uint8,uint8,string,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SpectrrFi__tokensResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toString(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toAddress()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _feeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptBuyOfferCall extends ethereum.Call {
  get inputs(): AcceptBuyOfferCall__Inputs {
    return new AcceptBuyOfferCall__Inputs(this);
  }

  get outputs(): AcceptBuyOfferCall__Outputs {
    return new AcceptBuyOfferCall__Outputs(this);
  }
}

export class AcceptBuyOfferCall__Inputs {
  _call: AcceptBuyOfferCall;

  constructor(call: AcceptBuyOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptBuyOfferCall__Outputs {
  _call: AcceptBuyOfferCall;

  constructor(call: AcceptBuyOfferCall) {
    this._call = call;
  }
}

export class AcceptSaleOfferCall extends ethereum.Call {
  get inputs(): AcceptSaleOfferCall__Inputs {
    return new AcceptSaleOfferCall__Inputs(this);
  }

  get outputs(): AcceptSaleOfferCall__Outputs {
    return new AcceptSaleOfferCall__Outputs(this);
  }
}

export class AcceptSaleOfferCall__Inputs {
  _call: AcceptSaleOfferCall;

  constructor(call: AcceptSaleOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _collateralTokenId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class AcceptSaleOfferCall__Outputs {
  _call: AcceptSaleOfferCall;

  constructor(call: AcceptSaleOfferCall) {
    this._call = call;
  }
}

export class AddCollateralBuyOfferCall extends ethereum.Call {
  get inputs(): AddCollateralBuyOfferCall__Inputs {
    return new AddCollateralBuyOfferCall__Inputs(this);
  }

  get outputs(): AddCollateralBuyOfferCall__Outputs {
    return new AddCollateralBuyOfferCall__Outputs(this);
  }
}

export class AddCollateralBuyOfferCall__Inputs {
  _call: AddCollateralBuyOfferCall;

  constructor(call: AddCollateralBuyOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amountToAdd(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddCollateralBuyOfferCall__Outputs {
  _call: AddCollateralBuyOfferCall;

  constructor(call: AddCollateralBuyOfferCall) {
    this._call = call;
  }
}

export class AddCollateralSaleOfferCall extends ethereum.Call {
  get inputs(): AddCollateralSaleOfferCall__Inputs {
    return new AddCollateralSaleOfferCall__Inputs(this);
  }

  get outputs(): AddCollateralSaleOfferCall__Outputs {
    return new AddCollateralSaleOfferCall__Outputs(this);
  }
}

export class AddCollateralSaleOfferCall__Inputs {
  _call: AddCollateralSaleOfferCall;

  constructor(call: AddCollateralSaleOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amountToAdd(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddCollateralSaleOfferCall__Outputs {
  _call: AddCollateralSaleOfferCall;

  constructor(call: AddCollateralSaleOfferCall) {
    this._call = call;
  }
}

export class AddTokenCall extends ethereum.Call {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get _tokenName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _chainlinkOracleAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _decimals(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class CancelBuyOfferCall extends ethereum.Call {
  get inputs(): CancelBuyOfferCall__Inputs {
    return new CancelBuyOfferCall__Inputs(this);
  }

  get outputs(): CancelBuyOfferCall__Outputs {
    return new CancelBuyOfferCall__Outputs(this);
  }
}

export class CancelBuyOfferCall__Inputs {
  _call: CancelBuyOfferCall;

  constructor(call: CancelBuyOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelBuyOfferCall__Outputs {
  _call: CancelBuyOfferCall;

  constructor(call: CancelBuyOfferCall) {
    this._call = call;
  }
}

export class CancelSaleOfferCall extends ethereum.Call {
  get inputs(): CancelSaleOfferCall__Inputs {
    return new CancelSaleOfferCall__Inputs(this);
  }

  get outputs(): CancelSaleOfferCall__Outputs {
    return new CancelSaleOfferCall__Outputs(this);
  }
}

export class CancelSaleOfferCall__Inputs {
  _call: CancelSaleOfferCall;

  constructor(call: CancelSaleOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelSaleOfferCall__Outputs {
  _call: CancelSaleOfferCall;

  constructor(call: CancelSaleOfferCall) {
    this._call = call;
  }
}

export class ChangeAddressBuyCall extends ethereum.Call {
  get inputs(): ChangeAddressBuyCall__Inputs {
    return new ChangeAddressBuyCall__Inputs(this);
  }

  get outputs(): ChangeAddressBuyCall__Outputs {
    return new ChangeAddressBuyCall__Outputs(this);
  }
}

export class ChangeAddressBuyCall__Inputs {
  _call: ChangeAddressBuyCall;

  constructor(call: ChangeAddressBuyCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _addressType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class ChangeAddressBuyCall__Outputs {
  _call: ChangeAddressBuyCall;

  constructor(call: ChangeAddressBuyCall) {
    this._call = call;
  }
}

export class ChangeAddressSaleCall extends ethereum.Call {
  get inputs(): ChangeAddressSaleCall__Inputs {
    return new ChangeAddressSaleCall__Inputs(this);
  }

  get outputs(): ChangeAddressSaleCall__Outputs {
    return new ChangeAddressSaleCall__Outputs(this);
  }
}

export class ChangeAddressSaleCall__Inputs {
  _call: ChangeAddressSaleCall;

  constructor(call: ChangeAddressSaleCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _addressType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class ChangeAddressSaleCall__Outputs {
  _call: ChangeAddressSaleCall;

  constructor(call: ChangeAddressSaleCall) {
    this._call = call;
  }
}

export class ChangeChainlinkOracleAddressCall extends ethereum.Call {
  get inputs(): ChangeChainlinkOracleAddressCall__Inputs {
    return new ChangeChainlinkOracleAddressCall__Inputs(this);
  }

  get outputs(): ChangeChainlinkOracleAddressCall__Outputs {
    return new ChangeChainlinkOracleAddressCall__Outputs(this);
  }
}

export class ChangeChainlinkOracleAddressCall__Inputs {
  _call: ChangeChainlinkOracleAddressCall;

  constructor(call: ChangeChainlinkOracleAddressCall) {
    this._call = call;
  }

  get _tokenId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _newChainlinkOracleAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangeChainlinkOracleAddressCall__Outputs {
  _call: ChangeChainlinkOracleAddressCall;

  constructor(call: ChangeChainlinkOracleAddressCall) {
    this._call = call;
  }
}

export class ChangeFeeAddressCall extends ethereum.Call {
  get inputs(): ChangeFeeAddressCall__Inputs {
    return new ChangeFeeAddressCall__Inputs(this);
  }

  get outputs(): ChangeFeeAddressCall__Outputs {
    return new ChangeFeeAddressCall__Outputs(this);
  }
}

export class ChangeFeeAddressCall__Inputs {
  _call: ChangeFeeAddressCall;

  constructor(call: ChangeFeeAddressCall) {
    this._call = call;
  }

  get _newFeeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeFeeAddressCall__Outputs {
  _call: ChangeFeeAddressCall;

  constructor(call: ChangeFeeAddressCall) {
    this._call = call;
  }
}

export class CreateBuyOfferCall extends ethereum.Call {
  get inputs(): CreateBuyOfferCall__Inputs {
    return new CreateBuyOfferCall__Inputs(this);
  }

  get outputs(): CreateBuyOfferCall__Outputs {
    return new CreateBuyOfferCall__Outputs(this);
  }
}

export class CreateBuyOfferCall__Inputs {
  _call: CreateBuyOfferCall;

  constructor(call: CreateBuyOfferCall) {
    this._call = call;
  }

  get _buyingTokenAmountWei(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _buyingTokenId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _exchangeRateWei(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _buyingForTokenId(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _collateralTokenId(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _repayInSeconds(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateBuyOfferCall__Outputs {
  _call: CreateBuyOfferCall;

  constructor(call: CreateBuyOfferCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateSaleOfferCall extends ethereum.Call {
  get inputs(): CreateSaleOfferCall__Inputs {
    return new CreateSaleOfferCall__Inputs(this);
  }

  get outputs(): CreateSaleOfferCall__Outputs {
    return new CreateSaleOfferCall__Outputs(this);
  }
}

export class CreateSaleOfferCall__Inputs {
  _call: CreateSaleOfferCall;

  constructor(call: CreateSaleOfferCall) {
    this._call = call;
  }

  get _sellingTokenAmountWei(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _sellingTokenId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _exchangeRateWei(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _sellingForTokenId(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _repayInSeconds(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateSaleOfferCall__Outputs {
  _call: CreateSaleOfferCall;

  constructor(call: CreateSaleOfferCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ForfeitBuyOfferCall extends ethereum.Call {
  get inputs(): ForfeitBuyOfferCall__Inputs {
    return new ForfeitBuyOfferCall__Inputs(this);
  }

  get outputs(): ForfeitBuyOfferCall__Outputs {
    return new ForfeitBuyOfferCall__Outputs(this);
  }
}

export class ForfeitBuyOfferCall__Inputs {
  _call: ForfeitBuyOfferCall;

  constructor(call: ForfeitBuyOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ForfeitBuyOfferCall__Outputs {
  _call: ForfeitBuyOfferCall;

  constructor(call: ForfeitBuyOfferCall) {
    this._call = call;
  }
}

export class ForfeitSaleOfferCall extends ethereum.Call {
  get inputs(): ForfeitSaleOfferCall__Inputs {
    return new ForfeitSaleOfferCall__Inputs(this);
  }

  get outputs(): ForfeitSaleOfferCall__Outputs {
    return new ForfeitSaleOfferCall__Outputs(this);
  }
}

export class ForfeitSaleOfferCall__Inputs {
  _call: ForfeitSaleOfferCall;

  constructor(call: ForfeitSaleOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ForfeitSaleOfferCall__Outputs {
  _call: ForfeitSaleOfferCall;

  constructor(call: ForfeitSaleOfferCall) {
    this._call = call;
  }
}

export class LiquidateBuyOfferCall extends ethereum.Call {
  get inputs(): LiquidateBuyOfferCall__Inputs {
    return new LiquidateBuyOfferCall__Inputs(this);
  }

  get outputs(): LiquidateBuyOfferCall__Outputs {
    return new LiquidateBuyOfferCall__Outputs(this);
  }
}

export class LiquidateBuyOfferCall__Inputs {
  _call: LiquidateBuyOfferCall;

  constructor(call: LiquidateBuyOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LiquidateBuyOfferCall__Outputs {
  _call: LiquidateBuyOfferCall;

  constructor(call: LiquidateBuyOfferCall) {
    this._call = call;
  }
}

export class LiquidateSaleOfferCall extends ethereum.Call {
  get inputs(): LiquidateSaleOfferCall__Inputs {
    return new LiquidateSaleOfferCall__Inputs(this);
  }

  get outputs(): LiquidateSaleOfferCall__Outputs {
    return new LiquidateSaleOfferCall__Outputs(this);
  }
}

export class LiquidateSaleOfferCall__Inputs {
  _call: LiquidateSaleOfferCall;

  constructor(call: LiquidateSaleOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LiquidateSaleOfferCall__Outputs {
  _call: LiquidateSaleOfferCall;

  constructor(call: LiquidateSaleOfferCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RepayBuyOfferCall extends ethereum.Call {
  get inputs(): RepayBuyOfferCall__Inputs {
    return new RepayBuyOfferCall__Inputs(this);
  }

  get outputs(): RepayBuyOfferCall__Outputs {
    return new RepayBuyOfferCall__Outputs(this);
  }
}

export class RepayBuyOfferCall__Inputs {
  _call: RepayBuyOfferCall;

  constructor(call: RepayBuyOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RepayBuyOfferCall__Outputs {
  _call: RepayBuyOfferCall;

  constructor(call: RepayBuyOfferCall) {
    this._call = call;
  }
}

export class RepayBuyOfferPartCall extends ethereum.Call {
  get inputs(): RepayBuyOfferPartCall__Inputs {
    return new RepayBuyOfferPartCall__Inputs(this);
  }

  get outputs(): RepayBuyOfferPartCall__Outputs {
    return new RepayBuyOfferPartCall__Outputs(this);
  }
}

export class RepayBuyOfferPartCall__Inputs {
  _call: RepayBuyOfferPartCall;

  constructor(call: RepayBuyOfferPartCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amountToRepay(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RepayBuyOfferPartCall__Outputs {
  _call: RepayBuyOfferPartCall;

  constructor(call: RepayBuyOfferPartCall) {
    this._call = call;
  }
}

export class RepaySaleOfferCall extends ethereum.Call {
  get inputs(): RepaySaleOfferCall__Inputs {
    return new RepaySaleOfferCall__Inputs(this);
  }

  get outputs(): RepaySaleOfferCall__Outputs {
    return new RepaySaleOfferCall__Outputs(this);
  }
}

export class RepaySaleOfferCall__Inputs {
  _call: RepaySaleOfferCall;

  constructor(call: RepaySaleOfferCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RepaySaleOfferCall__Outputs {
  _call: RepaySaleOfferCall;

  constructor(call: RepaySaleOfferCall) {
    this._call = call;
  }
}

export class RepaySaleOfferPartCall extends ethereum.Call {
  get inputs(): RepaySaleOfferPartCall__Inputs {
    return new RepaySaleOfferPartCall__Inputs(this);
  }

  get outputs(): RepaySaleOfferPartCall__Outputs {
    return new RepaySaleOfferPartCall__Outputs(this);
  }
}

export class RepaySaleOfferPartCall__Inputs {
  _call: RepaySaleOfferPartCall;

  constructor(call: RepaySaleOfferPartCall) {
    this._call = call;
  }

  get _offerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amountToRepay(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RepaySaleOfferPartCall__Outputs {
  _call: RepaySaleOfferPartCall;

  constructor(call: RepaySaleOfferPartCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
